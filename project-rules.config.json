{
  "$schema": "./project-rules-schema.json",
  "description": "项目特定的代码审查规则配置文件",
  "projects": {
    "backend/api-service": {
      "projectIdentifier": "backend/api-service",
      "projectName": "API Service",
      "description": "后端API服务项目",
      "enableDefaultRules": true,
      "excludeDefaultRules": ["no-any-type"],
      "additionalProjectTypes": ["backend", "node"],
      "rules": [
        {
          "id": "api-rate-limiting",
          "title": "API Rate Limiting",
          "description": "确保所有公开API端点都有速率限制保护",
          "severity": "error",
          "category": "security",
          "applicableFiles": ["**/controllers/*.js", "**/routes/*.js"],
          "projectTypes": ["backend"]
        },
        {
          "id": "api-auth-check",
          "title": "API Authentication Check",
          "description": "检查所有需要认证的端点是否正确使用了认证中间件",
          "severity": "error",
          "category": "security",
          "applicableFiles": ["**/routes/*.js", "**/middleware/*.js"],
          "projectTypes": ["backend"]
        },
        {
          "id": "api-response-format",
          "title": "API Response Format",
          "description": "保持API响应格式一致，使用标准的响应结构",
          "severity": "warning",
          "category": "maintainability",
          "applicableFiles": ["**/controllers/*.js"],
          "projectTypes": ["backend"]
        },
        {
          "id": "database-transaction",
          "title": "Database Transaction Management",
          "description": "涉及多个数据库操作时必须使用事务",
          "severity": "error",
          "category": "best-practice",
          "applicableFiles": ["**/services/*.js", "**/models/*.js"],
          "projectTypes": ["backend"]
        }
      ]
    },
    "frontend/web-app": {
      "projectIdentifier": "frontend/web-app",
      "projectName": "Web Application",
      "description": "前端Web应用项目",
      "enableDefaultRules": true,
      "additionalProjectTypes": ["react", "typescript"],
      "rules": [
        {
          "id": "component-folder-structure",
          "title": "Component Folder Structure",
          "description": "组件应该有统一的文件夹结构：Component/index.tsx, Component/styles.ts, Component/types.ts",
          "severity": "warning",
          "category": "maintainability",
          "applicableFiles": ["**/components/**/*.tsx"],
          "projectTypes": ["react"]
        },
        {
          "id": "use-custom-hooks",
          "title": "Use Custom Hooks",
          "description": "复杂的状态逻辑应该提取到自定义Hook中",
          "severity": "info",
          "category": "best-practice",
          "applicableFiles": ["**/components/**/*.tsx", "**/hooks/*.ts"],
          "projectTypes": ["react"]
        },
        {
          "id": "accessibility-requirements",
          "title": "Accessibility Requirements",
          "description": "确保所有交互元素都有适当的ARIA标签和键盘支持",
          "severity": "warning",
          "category": "best-practice",
          "applicableFiles": ["**/components/**/*.tsx"],
          "projectTypes": ["react"]
        }
      ]
    },
    "microservices/payment-service": {
      "projectIdentifier": "microservices/payment-service",
      "projectName": "Payment Service",
      "description": "支付微服务项目",
      "enableDefaultRules": true,
      "additionalProjectTypes": ["go", "backend"],
      "rules": [
        {
          "id": "payment-security-audit",
          "title": "Payment Security Audit",
          "description": "支付相关代码必须进行严格的安全审计，包括加密、日志脱敏等",
          "severity": "error",
          "category": "security",
          "applicableFiles": ["**/payment/*.go", "**/transaction/*.go"],
          "projectTypes": ["go"]
        },
        {
          "id": "payment-idempotency",
          "title": "Payment Idempotency",
          "description": "所有支付操作必须实现幂等性",
          "severity": "error",
          "category": "best-practice",
          "applicableFiles": ["**/handlers/*.go", "**/services/*.go"],
          "projectTypes": ["go"]
        },
        {
          "id": "payment-logging",
          "title": "Payment Transaction Logging",
          "description": "所有支付交易必须有完整的日志记录，但要注意敏感信息脱敏",
          "severity": "error",
          "category": "security",
          "applicableFiles": ["**/payment/*.go", "**/logger/*.go"],
          "projectTypes": ["go"]
        }
      ]
    },
    "blockchain/smart-contracts": {
      "projectIdentifier": "blockchain/smart-contracts",
      "projectName": "Smart Contracts",
      "description": "智能合约项目",
      "enableDefaultRules": false,
      "rules": [
        {
          "id": "reentrancy-guard",
          "title": "Reentrancy Guard",
          "description": "确保所有外部调用都有重入保护",
          "severity": "error",
          "category": "security",
          "applicableFiles": ["*.sol"],
          "projectTypes": ["solidity"]
        },
        {
          "id": "overflow-protection",
          "title": "Integer Overflow Protection",
          "description": "使用 SafeMath 或 Solidity 0.8+ 的内置溢出保护",
          "severity": "error",
          "category": "security",
          "applicableFiles": ["*.sol"],
          "projectTypes": ["solidity"]
        },
        {
          "id": "gas-optimization",
          "title": "Gas Optimization",
          "description": "优化存储使用和循环操作以减少 gas 消耗",
          "severity": "warning",
          "category": "performance",
          "applicableFiles": ["*.sol"],
          "projectTypes": ["solidity"]
        }
      ]
    }
  }
} 